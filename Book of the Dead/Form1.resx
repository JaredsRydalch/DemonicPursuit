<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        /9j/4AAQSkZJRgABAQEAYABgAAD/4QAuRXhpZgAATU0AKgAAAAgAAkAAAAMAAAABAAAAAEABAAEAAAAB
        AAAAAAAAAAD/2wBDAAoHBwkHBgoJCAkLCwoMDxkQDw4ODx4WFxIZJCAmJSMgIyIoLTkwKCo2KyIjMkQy
        Njs9QEBAJjBGS0U+Sjk/QD3/2wBDAQsLCw8NDx0QEB09KSMpPT09PT09PT09PT09PT09PT09PT09PT09
        PT09PT09PT09PT09PT09PT09PT09PT09PT3/wAARCAEsASwDASIAAhEBAxEB/8QAHwAAAQUBAQEBAQEA
        AAAAAAAAAAECAwQFBgcICQoL/8QAtRAAAgEDAwIEAwUFBAQAAAF9AQIDAAQRBRIhMUEGE1FhByJxFDKB
        kaEII0KxwRVS0fAkM2JyggkKFhcYGRolJicoKSo0NTY3ODk6Q0RFRkdISUpTVFVWV1hZWmNkZWZnaGlq
        c3R1dnd4eXqDhIWGh4iJipKTlJWWl5iZmqKjpKWmp6ipqrKztLW2t7i5usLDxMXGx8jJytLT1NXW19jZ
        2uHi4+Tl5ufo6erx8vP09fb3+Pn6/8QAHwEAAwEBAQEBAQEBAQAAAAAAAAECAwQFBgcICQoL/8QAtREA
        AgECBAQDBAcFBAQAAQJ3AAECAxEEBSExBhJBUQdhcRMiMoEIFEKRobHBCSMzUvAVYnLRChYkNOEl8RcY
        GRomJygpKjU2Nzg5OkNERUZHSElKU1RVVldYWVpjZGVmZ2hpanN0dXZ3eHl6goOEhYaHiImKkpOUlZaX
        mJmaoqOkpaanqKmqsrO0tba3uLm6wsPExcbHyMnK0tPU1dbX2Nna4uPk5ebn6Onq8vP09fb3+Pn6/9oA
        DAMBAAIRAxEAPwDyPNGajpa9a5mPzmim0U7gHNOzRQKYBmm5p+KMUWAjpM040wispjFBNOBNNAqQCnAQ
        opaAKdg1vYBnNPpdtLinYRGRTTU+ykMdJwArUHNSlKNlZumMipaeRSYo5QGGlGadipAnFCgAwUop+ykx
        WiVgFooApcVQhNtMNPNMNSxjTTKfTcVmwEpKdSGoYDc0lOoqShtFFJUsB9LSUbqu5ItKKSgdaYD6KKK0
        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
</value>
  </data>
</root>